# To support both python 2 and python 3
from __future__ import division, print_function, unicode_literals

# Common imports
import numpy as np
import os
import tarfile # 압축파일 라이브러리
from six.moves import urllib # 데이터의 위치를 알려주는 라이브러리
import pandas as pd


# to make this notebook's output stable across runs
np.random.seed(42)

# To plot pretty figures
import matplotlib as mpl
import matplotlib.pyplot as plt

# Ignore useless warnings (see SciPy issue #5998)
import warnings
warnings.filterwarnings(action="ignore", message="^internal gelsd")

# Where to save the figures
PROJECT_ROOT_DIR = "."
CHAPTER_ID = "end_to_end_project"
IMAGES_PATH = os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID)

DOWNLOAD_ROOT = "https://raw.githubusercontent.com/ageron/handson-ml/master/"
HOUSING_PATH = os.path.join("datasets", "housing")
HOUSING_FILE = "housing.tgz"
HOUSING_URL = DOWNLOAD_ROOT + "datasets/housing/housing.tgz"

def set_customize_plot_rc():
    mpl.rc('axes', labelsize=14)
    mpl.rc('xtick', labelsize=12)
    mpl.rc('ytick', labelsize=12)

def save_fig(fig_id, tight_layout=True, fig_extension="png", resolution=300):
    path = os.path.join(IMAGES_PATH, fig_id + "." + fig_extension)
    print("Saving figure", fig_id)
    if tight_layout:
        plt.tight_layout()
    plt.savefig(path, format=fig_extension, dpi=resolution)

def fetch_housing_data(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):
    if not os.path.isdir(housing_path): # 장소가 이미 있다면
        os.makedirs(housing_path) # 만들지 않음
    tgz_path = os.path.join(housing_path, "housing.tgz") # 확장자 이름과 경로 생성
    urllib.request.urlretrieve(housing_url, tgz_path)
    housing_tgz = tarfile.open(tgz_path) # 압축 파일 오픈
    housing_tgz.extractall(path=housing_path) # 압축 해제
    housing_tgz.close() # 압축 파일 닫기



def load_housing_data(housing_path=HOUSING_PATH):
    csv_path = os.path.join(housing_path, "housing.csv")
    return pd.read_csv(csv_path,encoding = 'utf-8')


def insight_data():
    if not os.path.isdir(IMAGES_PATH):
        os.makedirs(IMAGES_PATH)

    
    print(housing.head())
    housing.info()
    print(housing["ocean_proximity"].value_counts())
    print(housing.describe())


    housing.hist(bins=50, figsize=(20,15))
    save_fig("attribute_histogram_plots")
    plt.show()

def split_train_test(data, test_ratio): #데이터들을 섞음
    shuffled_indices = np.random.permutation(len(data))
    test_set_size = int(len(data) * test_ratio)
    test_indices = shuffled_indices[:test_set_size]#앞에 20퍼센트 이게 학습시킬 데이터??
    train_indices = shuffled_indices[test_set_size:]#뒤에 30퍼센트
    return data.iloc[train_indices], data.iloc[test_indices]# 데이터를 잘라 서 지랄함

if __name__ == '__main__':
    set_customize_plot_rc()
    if not os.path.isfile(os.path.join(HOUSING_PATH, HOUSING_FILE)):
        fetch_housing_data()
    housing = load_housing_data()
    #insight_data() 프린트 함수

    train_set, test_set = split_train_test(housing, 0.2)
    print(len(train_set), "train +", len(test_set), "test")
   
